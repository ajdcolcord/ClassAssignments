/* Class Diagram

                  +------------------------+
                  |         ILoS           |
                  +------------------------+
                             ^
                             |
                             |
                             |
           +-----------------+-------------------+
           |                                     |
           v                                     v
+------------------------+           +------------------------+
|        MtLoS           |           |       ConsLoS          |
+------------------------+           +------------------------+
+------------------------+           |String         first    |
|String     combine()    |           |ILoS           rest     |
|boolean    compareAlph()|           +------------------------+
|String     firstList()  |           |String     combine()    |
|ILoS       restList()   |           |boolean    compareAlph()|
|boolean    isSorted()   |           |String     firstList()  |
|ILoS       merge()      |           |ILoS       restList()   |
+------------------------+           |boolean    isSorted()   |
                                     |ILoS       merge()      |
                                     +------------------------+


*/

/* Template
Methods:
...this.combine()...                - String
...this.compareAlph(String that)... - boolean
...this.firstList()...              - String
...this.restList()...               - ILoS
...this.isSorted()...               - boolean
...this.merge(ILoS that)...         - ILoS
 */
/** to represent a list of Strings
 * 
 * @author Austin Colcord - ajdcolcord
 *
 */
interface ILoS {
    
    /** combines all Strings in this list into one 
     * 
     * @return String the string that is returned/
     * 
     */
    public String combine();
    
    /**compares two items and returns true if this String
     * comes alphabetically before that
     * 
     * @param that the string to compare to
     * @return boolean true if this string comes before that string
     */
    public boolean compareAlph(String that);
    
    /** returns the first of the list
     * 
     * @return String the first of the list
     */
    public String firstList();
    
    /** return the rest of the list
     * 
     * @return ILoS the rest of the list of strings
     */
    public ILoS restList();
    
    /** tell if the list is sorted in alphabetical order
     * 
     * @return boolean if the list is in alphabetical order
     */
    public boolean isSorted();
    
}